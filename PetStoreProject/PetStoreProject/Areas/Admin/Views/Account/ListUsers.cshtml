@{
    ViewData["Title"] = "ListCustomer";
}
@using PetStoreProject.ViewModels;

@model List<AccountDetailViewModel>

<style>

    #user-hover:hover {
        text-decoration: underline;
        cursor: pointer;
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">

<div class="main-content-inner">
    <!-- main-content-wrap -->
    <div class="main-content-wrap">
        <div class="flex items-center flex-wrap justify-between gap20 mb-27">
            <h3>Tất cả người dùng</h3>
            <ul class="breadcrumbs flex items-center flex-wrap justify-start gap10">
                <li>
                    <a href="index.html"><div class="text-tiny">Bảng điều khiển</div></a>
                </li>
                <li>
                    <i class="icon-chevron-right"></i>
                </li>
                <li>
                    <a href="#"><div class="text-tiny">Người dùng</div></a>
                </li>
                <li>
                    <i class="icon-chevron-right"></i>
                </li>
                <li>
                    <div class="text-tiny">Tất cả người dùng</div>
                </li>
            </ul>
        </div>
        <!-- all-user -->
        <div class="wg-box">
            <div class="flex items-center justify-between gap10 flex-wrap">
                <div class="wg-filter flex-grow">
                    <form class="form-search" onsubmit="return false;">
                        <fieldset class="name">
                            <input id="search-input" type="text" placeholder="Tìm kiếm theo tên người dùng" class="" name="name" tabindex="2" value="" aria-required="true" required="">
                        </fieldset>
                        <div class="button-submit">
                            <button onclick="searchFunction()"><i class="icon-search"></i></button>
                        </div>
                    </form>
                    <div class="wg-filter">
                        <label style="font-size: 16px">Vai trò:</label>
                        <select id="selected_role" onchange="SelectedRole()" style="width:auto">
                            <option selected value="0">-- Tất cả --</option>
                            <option value="1">Quản trị viên</option>
                            <option value="2">Nhân viên</option>
                            <option value="3">Khách hàng</option>
                        </select>
                    </div>
                </div>

                <a class="tf-button style-1 w208" href="add-new-user.html"><i class="icon-plus"></i>Add new</a>
            </div>
            <div class="wg-table table-all-user" id="table-content">
                <ul class="table-title flex gap20 mb-14">
                    <li>
                        <div id="user-hover" onclick="sortByName()" class=" body-title">Người dùng</div>
                    </li>
                    <li>
                        <div class="body-title">Số điện thoại</div>
                    </li>
                    <li>
                        <div class="body-title">Vai trò</div>
                    </li>
                    <li>
                        <div class="body-title">Email</div>
                    </li>
                    <li>
                        <div class="body-title">Hành động</div>
                    </li>
                </ul>
                <ul id="list-users" class="flex flex-column">
                </ul>
            </div>
            <div class="divider"></div>
            <div class="flex items-center justify-between flex-wrap gap40" style="font-size:16px;">
                <div class="text-tiny"></div>
                <div id="pagination"></div>
            </div>
        </div>
        <!-- /all-user -->
    </div>
    <!-- /main-content-wrap -->
</div>
</div>
@Html.Partial("_QuickViewAccount")


<script src="~/js/list-product.js"></script>
<script>
    var url = window.location.pathname;
    var selectedRole = 0;
    var sortName = "";
    window.addEventListener('load', function () {
        load(1, 10, 0, "", "");
    });

    function load(pageIndex, pageSize, selectedRole, searchName, sortName) {

        $.ajax({
            url: url,
            type: 'Post',
            data: {
                pageIndex: pageIndex, pageSize: pageSize, selectedRole: selectedRole, searchName: searchName, sortName: sortName
            },
            success: function (response) {
                var accounts = response.accounts;

                if (accounts.length > 0) {
                    $("#list-users").empty();
                    $('.text-tiny').empty();
                    $('.table-title').css('display', '');
                    $('#list-users').css('display', '');
                    $('#table-content').addClass('wg-table');
                    var html = "";
                    for (var i = 0; i < accounts.length; i++) {
                        html += '<li class="user-item gap20" >';
                        html += '<div class="image" >';
                        // html += '<img src="images/avatar/user-6.png" alt="">';
                        html += '<img src="/areas/images/logo_user/user-avatar.svg.png" />';
                        html += '</div>';
                        html += '<div class="flex items-center justify-between gap20 flex-grow" >';
                        html += '<div class="name" >';
                        html += '<a href="#" class="body-title-2" >' + accounts[i].fullName + '</a>';
                        // html += '<div class="text-tiny mt-3">Product name</div>';
                        html += '</div>';
                        if (accounts[i].phone != null) {
                            html += '<div class="body-text" >' + accounts[i].phone + '</div>';
                        }
                        else {
                            html += '<div class="body-text" style="font-weight:600;  font-style: italic;" > - </div>';
                        }
                        html += '<div class="body-text" >';
                        if (accounts[i].roles.length > 0) {
                            for (var j = 0; j < accounts[i].roles.length; j++) {
                                if (j > 0) {
                                    html += "<span>-</span>";
                                }
                                switch (accounts[i].roles[j].roleId) {
                                    case 1:
                                        html += '<span>Quản trị viên</span>';
                                        break;
                                    case 2:
                                        html += '<span>Nhân viên</span>';
                                        break;
                                    case 3:
                                        html += '<span>Khách hàng</span>';
                                        break;
                                    default:
                                        html += '<span> - </span>';
                                        break;
                                }

                            }
                        } else {
                            console.log("ahihi: " + accounts[i].roles);
                            html += '<span style="font-weight:600;  font-style: italic;">-</span>';
                        }
                        html += '</div>'
                        html += '<div class="body-text" >' + accounts[i].email + '</div>';
                        html += '<div class="list-icon-function" >';
                        html += '<div class="item eye">';
                        html += '<i class="icon-eye" onclick="quickViewAccount(\'' + encodeURIComponent(JSON.stringify(accounts[i])) + '\')"></i>';
                        html += '</div>';
                        html += '<div class="item edit">';
                        html += '<i class="icon-edit-3" onclick="editRoleAccount(\'' + encodeURIComponent(JSON.stringify(accounts[i])) + '\')"></i>';
                        html += '</div>';
                        html += '<div class="item trash">';
                        html += '<i class="icon-trash-2"></i>';
                        html += '</div>';
                        html += '</div>';
                        html += '</div>';
                        html += '</li>';
                    }
                    $("#list-users").html(html);
                    Pagination(response.currentPage, response.numberPage, response.pageSize);
                    console.log("data: ", response);
                } else {
                    $('#pagination').empty();
                    $('.table-title').css("display", "none");
                    $('#list-users').css("display", "none");
                    $('#table-content').removeClass('wg-table');
                    $('.text-tiny').empty();
                    $('#table-content').append('<div class="text-tiny" style="text-align: center; margin-top: 20px;"><h3>Không có dữ liệu!</h3></div>');
                    console.error("Unexpected response structure:", response);
                }

            },
            error: function (xhr, status, error) {
                console.error("Error:", xhr.responseText);
            }
        });
    }

    function NextPage(pageIndex, pageSize) {
        var searchName = document.getElementById("search-input").value;

        console.log('PageIndex: ' + pageIndex);
        console.log('PageSize: ' + pageSize);
        console.log('SearchName: ' + searchName);

        load(pageIndex, pageSize, selectedRole, searchName, sortName);
    }

    function SelectedRole() {
        selectedRole = $("#selected_role").val();
        var searchName = document.getElementById("search-input").value;
        load(1, 10, selectedRole, searchName, sortName);
    }

    document.addEventListener('DOMContentLoaded', function () {
        var searchInput = document.querySelector('input[name="name"]');

        searchInput.addEventListener('keypress', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn chặn hành động mặc định của form
                searchFunction();
            }
        });
    });

    function searchFunction() {
        var searchName = document.getElementById("search-input").value;

        console.log("Search query:", searchName);
        load(1, 10, selectedRole, searchName, sortName);
    }

    function quickViewAccount(accountJson) {
        var account = JSON.parse(decodeURIComponent(accountJson));

        console.log(account);
        $('#profilePopup').modal('show');
        $('#user-name').empty();
        $('#role').empty();
        $('#gender').val('');
        $('#dob').val('');
        $('#phone').val('');
        $('#address').val('');
        $('#email').val('');

        $('#user-name').append(account.fullName);

        if (account.roles.length > 0) {
            for (var i = 0; i < account.roles.length; i++) {
                if (i > 0) {
                    $('#role').append("<span>-</span>");
                }
                switch (account.roles[i].roleId) {
                    case 1:
                        $('#role').append('<span>Quản trị viên</span>');
                        break;
                    case 2:
                        $('#role').append('<span>Nhân viên</span>');
                        break;
                    case 3:
                        $('#role').append('<span>Khách hàng</span>');
                        break;
                    default:
                        $('#role').append('<span>-</span>');
                        break;
                }
            }
        } else {
            $('#role').append('<span>Chưa cập nhật</span>');
        }

        if (account.gender != null) {
            if (account.gender == 1) {
                $('#gender').val("Nam");
            } else {
                $('#gender').val("Nữ");
            }
        } else {
            $('#gender').val("-");
        }

        $('#dob').val(account.doB);
        if (account.phone != null) {
            $('#phone').val(account.phone);

        } else {
            $('#phone').val('-');
        }
        if (account.address != null && !(account.address.empty)) {
            $('#address').val(account.address);
        } else {
            $('#address').val('-');
        }
        $('#email').val(account.email);
    }

    function closeQuickViewAccount() {
        $('#profilePopup').modal('hide');
    }

    function sortByName() {
        var searchName = document.getElementById("search-input").value;
        switch (sortName) {
            case "":
                sortName = "abc";
                break;
            case "abc":
                sortName = "zxy";
                break;
            case "zxy":
                sortName = "";
                break;
            default:
                break;
        }
        load(1, 10, selectedRole, searchName, sortName);
    }

    function editRoleAccount(accountJson) {
        var account = JSON.parse(decodeURIComponent(accountJson));

        quickViewAccount(accountJson);

        var roleAdmin = "";
        var roleEmployee = "";
        var roleCustomer = "";
        var checkedAdmin = "";
        var checkedEmployee = "";
        var checkedCustomer = "";

        if (account.roles.length > 0) { 
            for (var i = 0; i < account.roles.length; i++) { 
                switch (account.roles[i].roleId) {
                    case 1:
                        checkedAdmin = "checked";
                        break;
                    case 2:
                        checkedEmployee = "checked"; 
                        break;
                    case 3:
                        checkedCustomer = "checked";
                        break;
                    default:
                        break;
                }
            }
        }

        var html = `
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="1" ${checkedAdmin}>
                <label class="form-check-label" for="inlineCheckbox1">Admin</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="2" ${checkedEmployee}>
                <label class="form-check-label" for="inlineCheckbox2">Employee</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="3" ${checkedCustomer}>
                <label class="form-check-label" for="inlineCheckbox3">Customer</label>
            </div>
                <button type="button" class="btn btn-icon" onclick="updateRoleAccount('${account.accountId}')" style="background:none; border:none; padding:0; cursor:pointer;">
                <i class="bi bi-save-fill" style="font-size: 25px; color: black;"></i>
            </button>
        `;

        $('#role').html(html);
    }

    function updateRoleAccount(accountId) {
        var roleAccounts = [];
        for (var i = 1; i <= 3; i++) {
            if($('#inlineCheckbox' + i).prop('checked')) {
                var role = $("#inlineCheckbox" + i).val();
                roleAccounts.push(role);
            }

        }
        console.log("role_account: " + roleAccounts);
        $.ajax({
            url: "UpdateRoleAccount",
            type: 'Post',
            data: { accountId: accountId, roleAccounts: roleAccounts },
            success: function (response) {
                if (response.result == 1) {
                    alert("Cập nhật vai trò thành công!");
                    $('#profilePopup').modal('hide');
                    load(1, 10, selectedRole, "", sortName);
                } else {
                    alert("Cập nhật vai trò thất bại!");
                }
            },
        });
    }

</script>