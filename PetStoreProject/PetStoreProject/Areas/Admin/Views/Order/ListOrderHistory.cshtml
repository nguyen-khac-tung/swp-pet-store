<link href="~/areas/css/list-order-history.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="main-content-inner">
    <!-- main-content-wrap -->
    <div class="main-content-wrap">
        <div class="flex items-center flex-wrap justify-between gap20 mb-27">
            <h3>Lịch sử đơn hàng</h3>
            <ul class="breadcrumbs flex items-center flex-wrap justify-start gap10">
                <li>
                    <a href="index.html"><div class="text-tiny">Bảng điều khiển</div></a>
                </li>
                <li>
                    <i class="icon-chevron-right"></i>
                </li>
                <li>
                    <a href="#"><div class="text-tiny">Đơn hàng</div></a>
                </li>
                <li>
                    <i class="icon-chevron-right"></i>
                </li>
                <li>
                    <div class="text-tiny">Lịch sử đơn hàng</div>
                </li>
            </ul>
        </div>
        <!-- product-list -->
        <div class="wg-box">
            <div class="title-box">
                <i class="icon-coffee"></i>
                <div class="body-text">Mẹo tìm bởi Mã đơn hàng: Mỗi đơn hàng được cung cấp với một mã duy nhất - bạn có thể phụ thuộc vào mã để tìm kiếm chính xác đơn hàng bạn cần. </div>
            </div>
            <div class="flex items-center justify-between gap10 flex-wrap">
                <div class="wg-filter flex-grow">
                    <form class="form-search" onsubmit="return false;">
                        <fieldset>
                            <input id="search-input-orderId" type="text" placeholder="Mã đơn hàng" class="" name="nameOrderId" tabindex="2" value="@ViewBag.searchOrderId" aria-required="true" required="">
                        </fieldset>
                        <div class="button-submit icon_searh_style">
                            <button onclick="search()"><i class="icon-search"></i></button>
                        </div>
                    </form>
                    <form class="form-search form_search_style" onsubmit="return false;">
                        <fieldset>
                            <input id="search-nameOrder-input" type="text" placeholder="Tên người đặt" class="input_search_style" name="sNameOrder" tabindex="2" value="@ViewBag.searchName" aria-required="true" required="">
                        </fieldset>
                        <div class="button-submit button_submit_style icon_searh_style">
                            <button onclick="searchNameOrder()"><i class="icon-search"></i></button>
                        </div>
                    </form>
                    <form class="form-search form_search_style" onsubmit="return false;">
                        <div class="select">
                            <input id="select-dateOrder-input" onchange="selectDateOrder()" type="date" name="date" placeholder="Ngày đặt" class="input_select_style" tabindex="2" value="@ViewBag.searchDate" aria-required="true" required="">
                        </div>
                    </form>
                    <form class="form-search form_search_style" onsubmit="return false;">
                        <fieldset>
                            <input id="search-consgineeName-input" type="text" placeholder="Tên người nhận" class="input_search_style" name="sConsigneeName" tabindex="2" value="@ViewBag.searchName" aria-required="true" required="">
                        </fieldset>
                        <div class="button-submit button_submit_style icon_searh_style">
                            <button onclick="searchConsigneeNameOrder()"><i class="icon-search"></i></button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="wg-table table-countries admin table-product-list">
                <ul class="table-title flex gap20 mb-14">
                    <li>
                        <div class="body-title no-select" onclick="SortByOrderId()">Mã đơn hàng<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title no-select" onclick="SortByOrderName()">Người đặt<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title">SĐT đặt</div>
                    </li>
                    <li>
                        <div class="body-title no-select" onclick="SortByOrderDate()">Ngày đặt<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title no-select" onclick="SortByConsigneeName()">Người nhận<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title">SĐT nhận</div>
                    </li>
                    <li>
                        <div class="body-title no-select" onclick="SortByTotalOrder()">Sản phẩm<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title no-select" onclick="SortByTotalAmount()">Tổng tiền<i class="bi bi-chevron-expand"></i></div>
                    </li>
                    <li>
                        <div class="body-title">Hành động</div>
                    </li>
                </ul>
                <ul class="flex flex-column" id="list-order-history">
                </ul>
            </div>
            <div class="divider"></div>
            <div class="flex items-center justify-between flex-wrap gap10">
                <div class="text-tiny" id="total-order"></div>
                <div id="pagination">
                </div>
            </div>
        </div>
        <!-- /product-list -->
    </div>
    <!-- /main-content-wrap -->
</div>
<!-- /main-content-wrap -->

<div id="orderDetail" class="modal fade show" tabindex="-1" role="dialog" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content" style="border-radius:10px;" id="modal_content_detail">
            <!-- Modal Header -->

        </div>
    </div>
</div>



<script>

    var url = new URL(window.location.href);

    var param = new URLSearchParams(url.search);

    /* Order history*/
    var sortOrderId = "";
    var sortName = "";
    var sortDate = "zxy";
    var sortTotalItems = "";
    var sortPrice = "";
    var searchName = "";
    var searchDateOrder = "";
    var searchOrderId = "";
    var pageIndexOrder = 1;
    var pageSizeOrder = 10;
    var searchConsigneeName = "";
    var sortConsigneeName = "";

    const sortingOrder = ["", "abc", "zxy"];

    var optionOrders = {
        UserId: "",
        PageIndex: pageIndexOrder,
        PageSize: pageSizeOrder,
        SortOrderId: sortOrderId,
        SortName: sortName,
        SortTotalItems: sortTotalItems,
        SortPrice: sortPrice,
        SortDate: sortDate,
        SearchName: searchName,
        SearchDate: searchDateOrder,
        SearchOrderId: searchOrderId,
        SearchConsigneeName: searchConsigneeName,
        SortConsigneeName: sortConsigneeName
    }

    function resetOptionOrder() {
        optionOrders.SortOrderId = "";
        optionOrders.SortName = "";
        optionOrders.SortDate = "";
        optionOrders.SortPrice = "";
        optionOrders.SortTotalItems = "";
    }

    function resetSearchOrder() {
        pageIndexOrder = 1;
        pageSizeOrder = 10;
        optionOrders.SearchDate = "";
        optionOrders.SearchName = "";
        optionOrders.SearchOrderId = "";
        optionOrders.SearchConsigneeName = "";
        resetOptionOrder();
    }

    function cycleSortOrder(currentOrder) {
        let nextIndex = (sortingOrder.indexOf(currentOrder) + 1) % sortingOrder.length;
        return sortingOrder[nextIndex];
    }

    window.addEventListener('load', function () {
        LoadOrderHistory(optionOrders);
    })

    function LoadOrderHistory(optionOrders) {
        $.ajax({
            url: url,
            type: "post",
            data: optionOrders,
            success: function (response) {
                $('#list-order-history').empty();
                if (response.orderHistory.length > 0) {
                    let html = "";
                    for (let i = 0; i < response.orderHistory.length; i++) {
                        html += ElementHtmlOrderHistory(response.orderHistory[i]);
                    }
                    $('#list-order-history').html(html);
                    paging(response.pageIndex, response.numberPage, 10);
                    $('#total-order').html('Tổng: ' + response.totalOrder + ' đơn hàng ');
                } else {
                    $('#list-order-history').html(`<div class="empty-order-history"><i class="fas fa-box-open" id="icon-box-empty"></i>
                                                <h6>Lịch sử đơn hàng hiện tại trống.</h6></div>`);
                    $('#pagination').empty();
                    $('#total-order').empty();
                }

            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function ElementHtmlOrderHistory(order) {
        let html = "";
        let amount = formatVND(order.totalAmount);
        let datetimeString = order.orderDate;
        let date = new Date(datetimeString);
        let year = date.getFullYear();
        let month = date.getMonth() + 1;
        let day = date.getDate();

        let dateOnlyString = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;

        html += `<li class="countries-item gap14" data-order='${encodeURIComponent(JSON.stringify(order))}'>
                        <div class="">#${order.orderId}</div>
                        <div class="name">
                            <a href="product-list.html" class="">${order.fullName}</a>
                        </div>
                        <div class="body-text">${order.phone}</div>
                        <div class="body-text">${dateOnlyString}</div>
                        <div class="body-text">${order.consigneeName}</div>
                        <div class="body-text">${order.consigneePhone}</div>
                        <div class="body-text">${order.totalOrderItems}</div>
                        <div class="body-text">${amount}đ</div>
                        <div class="list-icon-function">
                            <div class="item eye">
                                <i class="icon-eye" onclick="OrderDetail(this.parentElement.parentElement.parentElement)"></i>
                            </div>
                        </div>
                    </li>`;
        return html;
    }

    function formatVND(amount) {
        return amount.toLocaleString('en-US', '#.###');
    }

    function paging(currentPage, numberPage, pageSize) {
        if (numberPage > 0) {
            let str = '<nav aria-label="Page navigation example"> <ul class="pagination">';
            if (currentPage > 1) {
                str += `<li class="page-item"><a class="page-link" onclick="nextPage(${currentPage - 1},${pageSize})" href="javascript:void(0);">Trang trước</a></li>`;
            } else {
                str += `<li class="page-item"> <a class="page-link" href="javascript:void(0);" style="pointer-events:none; cursor:default; color:#b7b7b7;">Trang trước</a></li> `;
            }
            let startPage = Math.max(1, currentPage - 2);
            let endPage = Math.min(numberPage, currentPage + 2);
            if (startPage > 1) {
                str += ` <li class="page-item"><a class="page-link" onclick="nextPage(${1},${pageSize})" href="javascript:void(0);">1</a></li>`;
                if (startPage > 2) {
                    str += ` <li class="page-item"><a class="page-link" href="javascript:void(0);">...</a></li>`;
                }
            }
            for (let i = startPage; i <= endPage; i++) {
                if (currentPage === i) {
                    str += ` <li class="page-item active"><a class="page-link" href="javascript:void(0);">${i}</a></li>`;
                }
                else {
                    str += ` <li class="page-item"><a class="page-link" onclick="nextPage(${i},${pageSize})" href="javascript:void(0);">${i}</a></li>`;
                }
            }
            if (numberPage >= endPage + 1) {
                if (numberPage >= endPage + 2) {
                    str += ` <li class="page-item"><a class="page-link" href="javascript:void(0);">...</a></li>`;
                }
                str += ` <li class="page-item"><a class="page-link" onclick="nextPage(${numberPage},${pageSize})" href="javascript:void(0);">${numberPage}</a></li>`;
            }
            if (currentPage != numberPage) {
                str += ` <li class="page-item"><a class="page-link" onclick="nextPage(${currentPage + 1},${pageSize})" href="javascript:void(0);">Trang sau</a></li>`;
            } else {
                str += `<li class="page-item" > <a class="page-link" href="javascript:void(0);" style="pointer-events:none; cursor:default; color:#b7b7b7;">Trang sau</a></li> `;
            }
            str += "</ul></nav>";
            $('#pagination').html(str);
        } else {
            $('#pagination').empty();
        }
    }

    function nextPage(pageIndex, pageSize) {
        pageIndexOrder = pageIndex;
        optionOrders.PageIndex = pageIndexOrder;
        LoadOrderHistory(optionOrders);
    }

    //sort

    function SortByOrderId() {
        resetOptionOrder();
        sortOrderId = cycleSortOrder(sortOrderId);
        optionOrders.SortOrderId = sortOrderId;
        LoadOrderHistory(optionOrders);
    }

    function SortByOrderName() {
        resetOptionOrder();
        sortName = cycleSortOrder(sortName);
        optionOrders.SortName = sortName;
        LoadOrderHistory(optionOrders);
    }
    function SortByConsigneeName() {
        resetOptionOrder();
        sortConsigneeName = cycleSortOrder(sortConsigneeName);
        optionOrders.SortConsigneeName = sortConsigneeName;
        LoadOrderHistory(optionOrders);
    }

    function SortByTotalOrder() {
        resetOptionOrder();
        sortTotalItems = cycleSortOrder(sortTotalItems);
        optionOrders.SortTotalItems = sortTotalItems;
        LoadOrderHistory(optionOrders);
    }

    function SortByTotalAmount() {
        resetOptionOrder();
        sortPrice = cycleSortOrder(sortPrice);
        optionOrders.SortPrice = sortPrice;
        LoadOrderHistory(optionOrders);
    }

    function SortByOrderDate() {
        resetOptionOrder();
        sortDate = cycleSortOrder(sortDate);
        optionOrders.SortDate = sortDate;
        LoadOrderHistory(optionOrders);
    }

    function DomLoaded() {
        let searchOrderIdInput = document.querySelector('input[name="nameOrderId"]');
        let searchNameOrder = document.querySelector('input[name="sNameOrder"]');
        let sConsigneeName = document.querySelector('input[name="sConsigneeName"]');

        searchOrderIdInput.addEventListener('keypress', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn chặn hành động mặc định của form
                search();
            }
        });
        searchNameOrder.addEventListener('keypress', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn chặn hành động mặc định của form
                searchNameOrder();
            }
        });
        sConsigneeName.addEventListener('keypress', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Ngăn chặn hành động mặc định của form
                searchConsigneeNameOrder();
            }
        });
    }

    function resetSearchInput() {
        document.querySelector('input[name="nameOrderId"]').value = "";
        document.querySelector('input[name="sNameOrder"]').value = "";
        document.querySelector('input[name="sConsigneeName"]').value = "";
        document.getElementById('select-dateOrder-input').value = "";
    }


    function search() {
        searchOrderId = document.getElementById('search-input-orderId').value;
        // Kiểm tra nếu searchOrderId không phải là số
        if (isNaN(searchOrderId)) {
            // Thực hiện hành động phù hợp khi searchOrderId không hợp lệ, ví dụ như thông báo lỗi
            alert('Vui lòng nhập vào một số hợp lệ.');
            return; // Dừng hàm search() nếu searchOrderId không hợp lệ
        }

        console.log('search' + searchOrderId);
        resetSearchOrder();
        document.querySelector('input[name="sNameOrder"]').value = "";
        document.querySelector('input[name="sConsigneeName"]').value = "";
        document.getElementById('select-dateOrder-input').value = "";
        optionOrders.SearchOrderId = searchOrderId;
        LoadOrderHistory(optionOrders);
    }

    function searchNameOrder() {
        searchName = document.getElementById('search-nameOrder-input').value;
        resetSearchOrder();
        document.querySelector('input[name="nameOrderId"]').value = "";
        document.querySelector('input[name="sConsigneeName"]').value = "";
        document.getElementById('select-dateOrder-input').value = "";
        optionOrders.SearchName = searchName;
        LoadOrderHistory(optionOrders);
    }

    function selectDateOrder() {
        searchDateOrder = document.getElementById('select-dateOrder-input').value;
        resetSearchOrder();
        document.querySelector('input[name="nameOrderId"]').value = "";
        document.querySelector('input[name="sNameOrder"]').value = "";
        document.querySelector('input[name="sConsigneeName"]').value = "";
        optionOrders.SearchDate = searchDateOrder;
        LoadOrderHistory(optionOrders);
    }
    function searchConsigneeNameOrder() {
        searchConsigneeName = document.getElementById('search-consgineeName-input').value;
        resetSearchOrder();
        document.querySelector('input[name="nameOrderId"]').value = "";
        document.querySelector('input[name="sNameOrder"]').value = "";
        document.getElementById('select-dateOrder-input').value = "";
        optionOrders.SearchConsigneeName = searchConsigneeName;
        LoadOrderHistory(optionOrders);
    }

    //detail


    function CloseDetail() {
        $('#orderDetail').modal('hide');
    }
</script>
<script src="~/areas/js/list-order-history.js"></script>
