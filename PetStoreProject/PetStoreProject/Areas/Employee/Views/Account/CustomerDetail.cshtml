@{
    ViewData["Title"] = "Thông tín khách hàng";
}

@model PetStoreProject.ViewModels.AccountDetailViewModel;


<link href="~/areas/css/list-user-style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<style>
    .img-account-profile {
        margin-top: 20px;
        width: 120px;
        height: 120px;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

        .card .card-header {
            font-size: 16px;
            font-weight: 600;
        }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        /*         background-color: rgba(33, 40, 50, 0.03); */
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .card-body .label-input {
        font-size: 15px;
    }

    .form-control, .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1;
        color: black;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .input-group-text:hover {
        cursor: pointer;
    }

    .profile_wrapper .profile-name {
        padding-top: 10px;
        font-size: 19px;
        color: black;
        font-weight: 500;
    }

    .profile_wrapper .show-btn {
        top: 37px;
    }

    .profile_wrapper .gender-title {
        padding: 1.15rem 1.15rem 1.15rem 2.15rem;
        display: inline-block;
        width: 35%;
        font-size: 19px;
    }

    .profile_wrapper .gender-radio {
        display: inline-block;
        width: 20%;
        font-size: 19px;
        color: black;
    }

        .profile_wrapper .gender-radio input {
            cursor: pointer;
        }

    .profile_wrapper .login-btn:hover {
        background-color: #00adf6;
        transition: all 0.3s ease-in-out 0s;
    }

    .profile-option-btn {
        font-size: 16px;
        display: block;
        width: 100%;
        background-color: #0000;
        color: #000;
        border: none;
        padding: 20px;
    }

        .profile-option-btn:hover {
            cursor: pointer;
            background-color: #00adf6;
            border: none;
        }

    .option-btn-active {
        color: #fff;
        background-color: #00adf6;
        border: none;
    }

    .single-account-select {
        display: block;
        width: 100%;
        margin: 5px 0; /* Optional: add some margin between buttons */
    }

    .cart-select {
        padding: 0px !important;
    }

    .card-body-style {
        min-height: 210px;
    }

    .card-style {
        border-radius: 10px;
    }

    .main-content-style {
        min-height: 700px;
    }

    .content-profile {
        font-size: 16px;
        padding: 30px;
    }

    .input-style {
        border: none !important;
    }

        .input-style:disabled {
            background: none;
        }

    .padding_none {
        padding: 0px !important;
    }

    .no-select {
        user-select: none; /* Standard syntax */
        -webkit-user-select: none; /* Safari */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
    }
</style>
<div class="main-content-inner main-content-style">
    <!-- main-content-wrap -->
    <div class="main-content-wrap">
        <div class="profile_wrapper adp_top adp_bottom padding_none">
            <div class="container-xl px-4">
                <!-- Account page navigation-->
                <div class="row">
                    <div class="col-xl-4">
                        <!-- Profile picture card-->
                        <div class="card mb-4 mb-xl-0 card-style">
                            @* <div class="card-header">Ảnh Đại Diện</div> *@
                            <div class="card-body text-center card-body-style">
                                <!-- Profile picture image-->
                                <img class="img-account-profile rounded-circle mb-2" src="~/areas/images/logo_user/user-avatar.svg.png" />
                                @* <img class="img-account-profile rounded-circle mb-2" src="~/img/profile-user-2.png" alt=""> *@
                                <!-- Profile picture help block-->
                                <div id="profile-full-name" class="profile-name">@Model.FullName</div>
                                <!-- Profile picture upload button-->
                                @* <button class="btn btn-primary" type="button">Upload new image</button> *@
                            </div>
                            <div class="card-footer cart-select">
                                <button type="button" id="btn_info" class="btn btn-primary btn-lg btn-block profile-option-btn option-btn-active" onclick="customerInfo()">Thông Tin Tài Khoản</button>
                                <button type="button" id="btn_order" class="btn btn-primary btn-lg btn-block profile-option-btn" onclick="orderHistory(@Model.UserId)">Lịch Sử Đơn Hàng</button>
                                <button type="button" id="btn_service" class="btn btn-primary btn-lg btn-block profile-option-btn" onclick="serviceHistory(@Model.UserId)">Lịch Sử Dịch Vụ</button>
                            </div>
                        </div>
                    </div>
                    <div id="main-content" class="col-xl-8">
                        <div class="card mb-4 card-style">
                            <div class="card-header">
                                <h3>Thông tin tài khoản</h3>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12 content-profile">
                                        <form>
                                            <div class="form-group row">
                                                <label for="fullName" class="col-sm-4 col-form-label"><strong>FullName</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control input-style" id="fullName" value="@Model.FullName" disabled>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="gender" class="col-sm-4 col-form-label"><strong>Gender</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control input-style" id="gender"
                                                           value="@(Model.Gender == null ? "-" : (Model.Gender == true ? "Nam" : "Nữ"))" disabled>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="dob" class="col-sm-4 col-form-label input-style"><strong>Ngày sinh</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="date" class="form-control input-style" id="dob"
                                                           value="@(Model.DoB == null? "" : Model.DoB)" disabled>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="phone" class="col-sm-4 col-form-label input-style"><strong>Số điện thoại</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control input-style" id="phone"
                                                           value="@Model.Phone" disabled>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="email" class="col-sm-4 col-form-label"><strong>Email</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="email" class="form-control input-style" id="@Model.Email"
                                                           value="ryan@example.com" disabled>
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="address" class="col-sm-4 col-form-label input-style"><strong>Địa chỉ</strong></label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control input-style" id="address" value="@Model.Address" disabled>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.vi.min.js"></script>

<script>
    var url = new URL(window.location.href);

    var param = new URLSearchParams(url.search);

    var userId = param.get('userId');

    var mainContentInfo = $('#main-content').html();

    /* Order history*/
    var sortOrderId = localStorage.getItem('sortOrderId') || "";
    var sortName = localStorage.getItem('sortName') || "";
    var sortDate = localStorage.getItem('sortDate') || "zxy";
    var sortTotalItems = localStorage.getItem('sortTotalItems') || "";
    var sortPrice = localStorage.getItem('sortPrice') || "";

    const sortingOrder = ["", "abc", "zxy"];

    function customerInfo() {
        $('#btn_info').addClass('option-btn-active');
        $('#btn_service').removeClass('option-btn-active');
        $('#btn_order').removeClass('option-btn-active');
        $('#main-content').html(mainContentInfo);
        domLoaded();
    }

    /* Order history */
    function orderHistory(userId) {
        $('#btn_info').removeClass('option-btn-active');
        $('#btn_service').removeClass('option-btn-active');
        $('#btn_order').addClass('option-btn-active');
        $('#main-content').empty();
        orderHistoryLoad(userId, sortOrderId, sortName, sortDate, sortTotalItems, sortPrice, "");
        domLoaded();
    }

    function orderHistoryLoad(userId, sortOrderId, sortName, sortDate, sortTotalItems, sortPrice, searchName) {
        $.ajax({
            url: '/Employee/Account/OrderHistory',
            type: 'post',
            data: {userId: userId, orderId: sortOrderId, name: sortName, date: sortDate, totalItems: sortTotalItems, price: sortPrice, search: searchName },
            success: function (response) {
                $('#main-content').html(response);

            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    }

    function cycleSortOrder(currentOrder) {
        const nextIndex = (sortingOrder.indexOf(currentOrder) + 1) % sortingOrder.length;
        return sortingOrder[nextIndex];
    }

    function saveSortingParams() {
        localStorage.setItem('sortOrderId', sortOrderId);
        localStorage.setItem('sortName', sortName);
        localStorage.setItem('sortDate', sortDate);
        localStorage.setItem('sortTotalItems', sortTotalItems);
        localStorage.setItem('sortPrice', sortPrice);
    }

    // Sorting functions
    function sortByOrderId() {
        var searchName = document.getElementById('search-input').val;
        sortOrderId = cycleSortOrder(sortOrderId);
        console.log("OrderId: " + sortOrderId);
        saveSortingParams();
        orderHistoryLoad(userId, sortOrderId, "", "", "", '', searchName);
    }

    function sortByDate() {
        var searchName = document.getElementById('search-input').val;
        sortDate = cycleSortOrder(sortDate);
        saveSortingParams();
        orderHistoryLoad(userId, "", "", sortDate, "", "", searchName);
    }

    function sortByTotalOrderItems() {
        var searchName = document.getElementById('search-input').val;
        sortTotalItems = cycleSortOrder(sortTotalItems);
        saveSortingParams();
        orderHistoryLoad(userId, "", "", "", sortTotalItems, "", searchName);
    }

    function sortByName() {
        var searchName = document.getElementById('search-input').val;
        sortName = cycleSortOrder(sortName);
        saveSortingParams();
        orderHistoryLoad(userId, "", sortName, "", "", "", searchName);
    }

    function sortByPrice() {
        var searchName = document.getElementById('search-input').val;
        sortPrice = cycleSortOrder(sortPrice);
        saveSortingParams();
        orderHistoryLoad(userId, "", "", "", "", sortPrice, searchName);
    }

    function domLoaded() {
            var searchInput = document.querySelector('input[name="name"]');
            var sOrderServiceId = document.querySelector('input[name="sOrderServiceId"]');
            var sNameOrderService = document.querySelector('input[name="sNameOrderService"]');
            var sTimeOrderDate = document.querySelector('input[name="sTimeOrderDate"]');

            searchInput.addEventListener('keypress', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Ngăn chặn hành động mặc định của form
                    search();
                }
            });
            sOrderServiceId.addEventListener('keypress', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Ngăn chặn hành động mặc định của form
                    searchOrderServiceId();
                }
            });
            sNameOrderService.addEventListener('keypress', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Ngăn chặn hành động mặc định của form
                    searchNameOrderService();
                }
            });
            sTimeOrderDate.addEventListener('keypress', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault(); // Ngăn chặn hành động mặc định của form
                    searchTimeOrderService();
                }
            });
    }

    function search() {
        var searchName = document.getElementById('search-input').value;
        console.log('search' + searchName);
        orderHistoryLoad(userId, sortOrderId, sortName, sortDate, sortTotalItems, sortPrice, searchName);
    }

    /* Service histtory */

    var orderServiceId = localStorage.getItem("orderServiceId") || "";
    var nameOrderService = localStorage.getItem("nameOrderService") || "";
    var dateOrderService = localStorage.getItem('dateOrderService') || "";
    var timeOrderService = localStorage.getItem('timeOrderService') || "";
    var serviceIdOrderService = localStorage.getItem('serviceIdOrderService') || "";
    var priceOrderService = localStorage.getItem("priceOrderService") || "";
    var seOrderServiceId = "";
    var seTime = "";
    var seDate = "";
    var status = "";
    var seName = "";

    function saveSortingParamOrderService() {
        localStorage.setItem('orderServiceId', orderServiceId);
        localStorage.setItem('nameOrderService', nameOrderService);
        localStorage.setItem('dateOrderService', dateOrderService);
        localStorage.setItem('timeOrderService', timeOrderService);
        localStorage.setItem('serviceIdOrderService', serviceIdOrderService);
        localStorage.setItem('priceOrderService', priceOrderService);
    }

    function serviceHistory(userId) {
        $('#btn_info').removeClass('option-btn-active');
        $('#btn_service').addClass('option-btn-active');
        $('#btn_order').removeClass('option-btn-active');
        $('#main-content').empty();
        serviceHistoryLoad(options);
        domLoaded();
    }

    var options = {
        UserId: userId,
        SortOrderServiceId: orderServiceId,
        SortName: nameOrderService,
        SortDate: dateOrderService,
        SortTime: timeOrderService,
        SortServiceId: serviceIdOrderService,
        SortPrice: priceOrderService,
        SearchOrderServiceId: seOrderServiceId,
        SearchTime: seTime,
        SearchName: seName,
        SearchDate: seDate,
        Status: status
    }

    function resetSortOptions() {
        options.SortOrderServiceId = null;
        options.SortName = null;
        options.SortDate = null;
        options.SortTime = null;
        options.SortServiceId = null;
        options.SortPrice = null;
    }

    function serviceHistoryLoad(options) {
        $.ajax({
            url: '/Employee/Account/OrderServiceHistory',
            type: 'post',
            data: options,
            success: function (response) {
                $('#main-content').html(response);
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    }

    function searchOrderServiceId() {
        seOrderServiceId = document.getElementById('search-orderService-input').value;
        console.log("seOrder: " + seOrderServiceId);
        options.SearchOrderServiceId = seOrderServiceId;
        options.SortOrderServiceId = "";
        options.SortName = "";
        options.SortDate = "";
        options.SortTime = "";
        options.SortServiceId = "";
        options.SortPrice = "";
        options.SearchTime = "";
        options.SearchName = "";
        options.SearchDate = "";
        options.Status = "";
        saveSortingParamOrderService()
        serviceHistoryLoad(options);
    }

    function searchNameOrderService() {
        seName = $('#search-name-input').val();
        options.SearchName = seName;
        serviceHistoryLoad(options);
    }

    function searchTimeOrderService() {
        seTime = $('#search-time-input').val();
        options.SearchTime = seTime;
        serviceHistoryLoad(options);
    }

    function selectDateOrderService() {
        seDate = $('#select-date-input').val();
        options.SearchDate = seDate;
        serviceHistoryLoad(options);
    }

    function selectedStatusOrderSerice() {
        status = $('#selected_status_orderService').val();
        options.Status = status;
        serviceHistoryLoad(options);
    }

    function sortByOrderServiceId() {
        resetSortOptions();
        orderServiceId = cycleSortOrder(orderServiceId);
        saveSortingParamOrderService();
        options.SortOrderServiceId = orderServiceId;
        serviceHistoryLoad(options);
    }

    function sortByNameService() {
        resetSortOptions();
        nameOrderService = cycleSortOrder(nameOrderService);
        saveSortingParamOrderService();
        options.SortName = nameOrderService;
        serviceHistoryLoad(options);
    }

    function sortByDateService() {
        resetSortOptions();
        dateOrderService = cycleSortOrder(dateOrderService);
        saveSortingParamOrderService();
        options.SortDate = dateOrderService;
        serviceHistoryLoad(options);
    }

    function sortByTimeService() {
        resetSortOptions();
        timeOrderService = cycleSortOrder(timeOrderService);
        saveSortingParamOrderService();
        options.SortTime = timeOrderService;
        serviceHistoryLoad(options);
    }

    function sortByServiceId() {
        resetSortOptions();
        serviceIdOrderService = cycleSortOrder(serviceIdOrderService);
        saveSortingParamOrderService();
        options.SortServiceId = serviceIdOrderService;
        serviceHistoryLoad(options);
    }

    function sortByPriceService() {
        resetSortOptions();
        priceOrderService = cycleSortOrder(priceOrderService);
        saveSortingParamOrderService();
        options.SortPrice = priceOrderService;
        serviceHistoryLoad(options);
    }
</script>